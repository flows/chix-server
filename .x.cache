{
  "dependencies": {
    "npm": {
      "mongojs": "latest",
      "json-gate": "0.x.x",
      "express": "3.x.x",
      "body-parser": "1.x.x",
      "cors": "2.x.x",
      "underscore": "1.x.x",
      "dot-object": "0.x.x"
    }
  },
  "nodeDefinitions": {
    "./graphs/{ns}/{name}.fbp": {
      "rest": {
        "getAll": {
          "type": "flow",
          "nodes": [
            {
              "id": "Find",
              "title": "Find",
              "ns": "mongojs",
              "name": "findAll",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "get",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res",
                "setting": {
                  "pointer": true
                }
              },
              "target": {
                "id": "Find",
                "port": ":start"
              },
              "metadata": {
                "title": "Route res -> :start Find"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Find documents -> in ToString"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "res",
                "setting": {
                  "pointer": true
                }
              },
              "target": {
                "id": "Send",
                "port": "res",
                "setting": {
                  "sync": "Route"
                }
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body",
                "setting": {
                  "sync": "Route"
                }
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "GetAll",
          "description": "Serve All documents within a collection",
          "ns": "rest",
          "name": "getAll",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Find"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "getByParam": {
          "type": "flow",
          "nodes": [
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "get",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Find",
              "title": "Find",
              "ns": "mongojs",
              "name": "find",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Send",
                "port": "res"
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "req",
                "setting": {
                  "index": "params"
                }
              },
              "target": {
                "id": "Find",
                "port": "criteria"
              },
              "metadata": {
                "title": "Route req -> criteria Find"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Find documents -> in ToString"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "GetById",
          "description": "Get Something by parameter from the collection",
          "ns": "rest",
          "name": "getByParam",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Find"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "put": {
          "type": "flow",
          "nodes": [
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "put",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Validate",
              "title": "Validate",
              "ns": "json",
              "name": "validate",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "FilterId",
              "title": "FilterId",
              "ns": "object",
              "name": "pick",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Update",
              "title": "Update",
              "ns": "mongojs",
              "name": "update",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Send",
                "port": "res"
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "req",
                "setting": {
                  "index": "body"
                }
              },
              "target": {
                "id": "FilterId",
                "port": "in"
              },
              "metadata": {
                "title": "Route req -> in FilterId"
              }
            },
            {
              "source": {
                "id": "FilterId",
                "port": "out"
              },
              "target": {
                "id": "Update",
                "port": "selector"
              },
              "metadata": {
                "title": "FilterId out -> selector Update"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "req",
                "setting": {
                  "index": "body"
                }
              },
              "target": {
                "id": "Validate",
                "port": "in"
              },
              "metadata": {
                "title": "Route req -> in Validate"
              }
            },
            {
              "source": {
                "id": "Validate",
                "port": "out"
              },
              "target": {
                "id": "Update",
                "port": "document"
              },
              "metadata": {
                "title": "Validate out -> document Update"
              }
            },
            {
              "source": {
                "id": "Update",
                "port": "docs"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Update docs -> in ToString"
              }
            },
            {
              "source": {
                "id": "Validate",
                "port": "error"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Validate error -> in ToString"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "PutFlow",
          "ns": "rest",
          "name": "put",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "schema": {
                "type": "object",
                "title": "Schema",
                "name": "schema",
                "nodeId": "Validate"
              },
              "pick": {
                "title": "Pick",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "name": "pick",
                "nodeId": "FilterId"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Update"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "post": {
          "type": "flow",
          "nodes": [
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Insert",
              "title": "Insert",
              "ns": "mongojs",
              "name": "insert",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Validate",
              "title": "Validate",
              "ns": "json",
              "name": "validate",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "post",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Send",
                "port": "res"
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "req",
                "setting": {
                  "index": "body"
                }
              },
              "target": {
                "id": "Validate",
                "port": "in"
              },
              "metadata": {
                "title": "Route req -> in Validate"
              }
            },
            {
              "source": {
                "id": "Validate",
                "port": "out"
              },
              "target": {
                "id": "Insert",
                "port": "document"
              },
              "metadata": {
                "title": "Validate out -> document Insert"
              }
            },
            {
              "source": {
                "id": "Validate",
                "port": "error"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Validate error -> in ToString"
              }
            },
            {
              "source": {
                "id": "Insert",
                "port": "docs"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Insert docs -> in ToString"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "PostFlow",
          "ns": "rest",
          "name": "post",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "title": "Path",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Insert"
              },
              "schema": {
                "type": "object",
                "title": "Schema",
                "name": "schema",
                "nodeId": "Validate"
              },
              "app": {
                "type": "function",
                "title": "App",
                "required": true,
                "readonly": true,
                "name": "app",
                "nodeId": "Route"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "delete": {
          "type": "flow",
          "nodes": [
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "delete",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Find",
              "title": "Find",
              "ns": "mongojs",
              "name": "find",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Send",
                "port": "res"
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "req",
                "setting": {
                  "index": "params"
                }
              },
              "target": {
                "id": "Find",
                "port": "criteria"
              },
              "metadata": {
                "title": "Route req -> criteria Find"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Find documents -> in ToString"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "DeleteFlow",
          "ns": "rest",
          "name": "delete",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Find"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "getNodes": {
          "type": "flow",
          "nodes": [
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "get",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Find",
              "title": "Find",
              "ns": "mongojs",
              "name": "findAll",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Send",
                "port": "res"
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Find",
                "port": ":start"
              },
              "metadata": {
                "title": "Route res -> :start Find"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "Find documents -> in ToString"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "GetNodes",
          "ns": "rest",
          "name": "getNodes",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Find"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "findFlows": {
          "type": "flow",
          "nodes": [
            {
              "id": "Find",
              "title": "Find",
              "ns": "mongojs",
              "name": "findAll",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "get",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "OneOf",
              "title": "OneOf",
              "ns": "object",
              "name": "oneOf",
              "context": {
                "path": [
                  "title",
                  "name"
                ]
              },
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Log",
              "title": "Log",
              "ns": "console",
              "name": "log",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Empty",
              "title": "Empty",
              "ns": "object",
              "name": "isEmpty",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Document",
              "title": "Document",
              "ns": "object",
              "name": "create",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "EmptyToString",
              "title": "EmptyToString",
              "ns": "data",
              "name": "string",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "MergeValue",
              "title": "MergeValue",
              "ns": "object",
              "name": "merge",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Arr",
              "title": "Arr",
              "ns": "array",
              "name": "create",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "MergeTokens",
              "title": "MergeTokens",
              "ns": "object",
              "name": "merge",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Find",
                "port": ":start"
              },
              "metadata": {
                "title": "Route res -> :start Find"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "Empty",
                "port": "in"
              },
              "metadata": {
                "title": "Find documents -> in Empty"
              }
            },
            {
              "source": {
                "id": "Empty",
                "port": "no"
              },
              "target": {
                "id": "Document",
                "port": "in",
                "setting": {
                  "cyclic": true
                }
              },
              "metadata": {
                "title": "Empty no -> in Document"
              }
            },
            {
              "source": {
                "id": "Empty",
                "port": "yes"
              },
              "target": {
                "id": "EmptyToString",
                "port": "in"
              },
              "metadata": {
                "title": "Empty yes -> in EmptyToString"
              }
            },
            {
              "source": {
                "id": "EmptyToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "EmptyToString out -> body Send"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "Find documents -> msg Log"
              }
            },
            {
              "source": {
                "id": "Document",
                "port": "out"
              },
              "target": {
                "id": "OneOf",
                "port": "in"
              },
              "metadata": {
                "title": "Document out -> in OneOf"
              }
            },
            {
              "source": {
                "id": "OneOf",
                "port": "out"
              },
              "target": {
                "id": "MergeValue",
                "port": "in1",
                "setting": {
                  "index": "value"
                }
              },
              "metadata": {
                "title": "OneOf out -> in1 MergeValue"
              }
            },
            {
              "source": {
                "id": "Document",
                "port": "out"
              },
              "target": {
                "id": "MergeValue",
                "port": "in2"
              },
              "metadata": {
                "title": "Document out -> in2 MergeValue"
              }
            },
            {
              "source": {
                "id": "Document",
                "port": "out"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "Document out -> msg Log"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "error"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "Find error -> msg Log"
              }
            },
            {
              "source": {
                "id": "OneOf",
                "port": "error"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "OneOf error -> msg Log"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out",
                "setting": {
                  "index": "value"
                }
              },
              "target": {
                "id": "Arr",
                "port": "in",
                "setting": {
                  "index": 0
                }
              },
              "metadata": {
                "title": "MergeValue out -> in Arr"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out",
                "setting": {
                  "index": "ns"
                }
              },
              "target": {
                "id": "Arr",
                "port": "in",
                "setting": {
                  "index": 1
                }
              },
              "metadata": {
                "title": "MergeValue out -> in Arr"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out",
                "setting": {
                  "index": "name"
                }
              },
              "target": {
                "id": "Arr",
                "port": "in",
                "setting": {
                  "index": 2
                }
              },
              "metadata": {
                "title": "MergeValue out -> in Arr"
              }
            },
            {
              "source": {
                "id": "Arr",
                "port": "out"
              },
              "target": {
                "id": "MergeTokens",
                "port": "in1",
                "setting": {
                  "index": "tokens"
                }
              },
              "metadata": {
                "title": "Arr out -> in1 MergeTokens"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out"
              },
              "target": {
                "id": "MergeTokens",
                "port": "in2"
              },
              "metadata": {
                "title": "MergeValue out -> in2 MergeTokens"
              }
            },
            {
              "source": {
                "id": "MergeTokens",
                "port": "out",
                "setting": {
                  "collect": true
                }
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "MergeTokens out -> in ToString"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "res"
              },
              "target": {
                "id": "Send",
                "port": "res"
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body"
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "FindFlows",
          "description": "Find documents within a collection",
          "ns": "rest",
          "name": "findFlows",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Find"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        },
        "find": {
          "type": "flow",
          "nodes": [
            {
              "id": "Find",
              "title": "Find",
              "ns": "mongojs",
              "name": "findAll",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "ToString",
              "title": "ToString",
              "ns": "json",
              "name": "stringify",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Send",
              "title": "Send",
              "ns": "express",
              "name": "send",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Route",
              "title": "Route",
              "ns": "express",
              "name": "get",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "OneOf",
              "title": "OneOf",
              "ns": "object",
              "name": "oneOf",
              "context": {
                "path": [
                  "title",
                  "name"
                ]
              },
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Log",
              "title": "Log",
              "ns": "console",
              "name": "log",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Document",
              "title": "Document",
              "ns": "object",
              "name": "create",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "MergeValue",
              "title": "MergeValue",
              "ns": "object",
              "name": "merge",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "Arr",
              "title": "Arr",
              "ns": "array",
              "name": "create",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            },
            {
              "id": "MergeTokens",
              "title": "MergeTokens",
              "ns": "object",
              "name": "merge",
              "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          ],
          "links": [
            {
              "source": {
                "id": "Route",
                "port": "res",
                "setting": {
                  "pointer": true
                }
              },
              "target": {
                "id": "Find",
                "port": ":start"
              },
              "metadata": {
                "title": "Route res -> :start Find"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "documents"
              },
              "target": {
                "id": "Document",
                "port": "in",
                "setting": {
                  "cyclic": true
                }
              },
              "metadata": {
                "title": "Find documents -> in Document"
              }
            },
            {
              "source": {
                "id": "Document",
                "port": "out"
              },
              "target": {
                "id": "OneOf",
                "port": "in"
              },
              "metadata": {
                "title": "Document out -> in OneOf"
              }
            },
            {
              "source": {
                "id": "OneOf",
                "port": "out"
              },
              "target": {
                "id": "MergeValue",
                "port": "in1",
                "setting": {
                  "index": "value"
                }
              },
              "metadata": {
                "title": "OneOf out -> in1 MergeValue"
              }
            },
            {
              "source": {
                "id": "Document",
                "port": "out"
              },
              "target": {
                "id": "MergeValue",
                "port": "in2"
              },
              "metadata": {
                "title": "Document out -> in2 MergeValue"
              }
            },
            {
              "source": {
                "id": "Document",
                "port": "out"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "Document out -> msg Log"
              }
            },
            {
              "source": {
                "id": "Find",
                "port": "error"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "Find error -> msg Log"
              }
            },
            {
              "source": {
                "id": "OneOf",
                "port": "error"
              },
              "target": {
                "id": "Log",
                "port": "msg"
              },
              "metadata": {
                "title": "OneOf error -> msg Log"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out",
                "setting": {
                  "index": "value"
                }
              },
              "target": {
                "id": "Arr",
                "port": "in",
                "setting": {
                  "index": 0
                }
              },
              "metadata": {
                "title": "MergeValue out -> in Arr"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out",
                "setting": {
                  "index": "ns"
                }
              },
              "target": {
                "id": "Arr",
                "port": "in",
                "setting": {
                  "index": 1
                }
              },
              "metadata": {
                "title": "MergeValue out -> in Arr"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out",
                "setting": {
                  "index": "name"
                }
              },
              "target": {
                "id": "Arr",
                "port": "in",
                "setting": {
                  "index": 2
                }
              },
              "metadata": {
                "title": "MergeValue out -> in Arr"
              }
            },
            {
              "source": {
                "id": "Arr",
                "port": "out"
              },
              "target": {
                "id": "MergeTokens",
                "port": "in1",
                "setting": {
                  "index": "tokens"
                }
              },
              "metadata": {
                "title": "Arr out -> in1 MergeTokens"
              }
            },
            {
              "source": {
                "id": "MergeValue",
                "port": "out"
              },
              "target": {
                "id": "MergeTokens",
                "port": "in2"
              },
              "metadata": {
                "title": "MergeValue out -> in2 MergeTokens"
              }
            },
            {
              "source": {
                "id": "MergeTokens",
                "port": "out",
                "setting": {
                  "collect": true
                }
              },
              "target": {
                "id": "ToString",
                "port": "in"
              },
              "metadata": {
                "title": "MergeTokens out -> in ToString"
              }
            },
            {
              "source": {
                "id": "Route",
                "port": "res",
                "setting": {
                  "pointer": true
                }
              },
              "target": {
                "id": "Send",
                "port": "res",
                "setting": {
                  "sync": "Route"
                }
              },
              "metadata": {
                "title": "Route res -> res Send"
              }
            },
            {
              "source": {
                "id": "ToString",
                "port": "out"
              },
              "target": {
                "id": "Send",
                "port": "body",
                "setting": {
                  "sync": "Route"
                }
              },
              "metadata": {
                "title": "ToString out -> body Send"
              }
            }
          ],
          "title": "FindNodes",
          "description": "Find documents within a collection",
          "ns": "rest",
          "name": "find",
          "ports": {
            "input": {
              "path": {
                "type": "string",
                "default": "/",
                "title": "Path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true,
                "name": "path",
                "nodeId": "Route"
              },
              "collection": {
                "type": "function",
                "title": "Collection",
                "required": true,
                "readonly": true,
                "name": "collection",
                "nodeId": "Find"
              },
              "app": {
                "type": "function",
                "title": "App",
                "readonly": true,
                "required": true,
                "name": "app",
                "nodeId": "Route"
              }
            }
          },
          "providers": {
            "@": {
              "url": "https://api.chix.io/v1/nodes/{ns}/{name}"
            }
          },
          "provider": "./graphs/{ns}/{name}.fbp"
        }
      }
    },
    "https://api.chix.io/v1/nodes/{ns}/{name}": {
      "mongojs": {
        "db": {
          "_id": "5b1924b53bbb79000fdcfa8c",
          "name": "db",
          "ns": "mongojs",
          "description": "mongojs database",
          "phrases": {
            "active": "Creating mongodb connection: {{input.in}}"
          },
          "ports": {
            "input": {
              "connection_string": {
                "type": "string",
                "title": "Connection String",
                "description": "The connection string should follow the format described in [the mongo connection](http://docs.mongodb.org/manual/reference/connection-string/) string docs",
                "require": true
              }
            },
            "output": {
              "db": {
                "type": "function"
              }
            }
          },
          "dependencies": {
            "npm": {
              "mongojs": "latest"
            }
          },
          "env": "server",
          "fn": "output = {\n  db: $.create(mongojs($.connection_string))\n}\n",
          "id": "8b75b6f0-4fc3-421e-b102-000abaedc741",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Db"
        },
        "close": {
          "_id": "5b1924b53bbb79000fdcfa8a",
          "name": "close",
          "ns": "mongojs",
          "description": "mongojs close",
          "phrases": {
            "active": "Closing database connection"
          },
          "ports": {
            "input": {
              "db": {
                "type": "function",
                "title": "mongojs db handle"
              }
            },
            "output": {}
          },
          "env": "server",
          "fn": "output = function() {\n  $.db.close()\n}\n",
          "id": "11b59bc6-8903-438b-bbb8-22447d7bc97c",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Close"
        },
        "collection": {
          "_id": "5b1924b53bbb79000fdcfa8b",
          "name": "collection",
          "ns": "mongojs",
          "description": "mongojs collection",
          "phrases": {
            "active": "Opening the {{input.collection}} collection"
          },
          "ports": {
            "input": {
              "collection": {
                "type": "string",
                "title": "Collection",
                "description": "The collection name for this database",
                "required": true
              },
              "db": {
                "type": "function",
                "title": "Db Handle",
                "description": "Expects the `db` port of the mongojs.db node",
                "readonly": true,
                "required": true
              }
            },
            "output": {
              "collection": {
                "type": "function",
                "title": "Db Collection handle",
                "readonly": true
              }
            }
          },
          "env": "server",
          "fn": "output = {\n  collection: $.create($.db.collection($.collection))\n}\n",
          "id": "e3dccafe-bff5-4f28-a081-4911246ed7b5",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "NodesCollection"
        },
        "findAll": {
          "_id": "5b1924b53bbb79000fdcfa8d",
          "name": "findAll",
          "ns": "mongojs",
          "description": "MongoJS find all",
          "phrases": {
            "active": "Finding all documents"
          },
          "ports": {
            "input": {
              "collection": {
                "type": "function",
                "title": "A mongojs.collection handle",
                "required": true,
                "readonly": true
              }
            },
            "output": {
              "error": {
                "title": "Error",
                "type": "object"
              },
              "documents": {
                "title": "Documents",
                "type": "object"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.collection, 'find']\n",
          "id": "828edc19-a1ca-4d54-92d8-3cfd680bf4c1",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Find"
        },
        "find": {
          "_id": "5b1924b53bbb79000fdcfa90",
          "name": "find",
          "ns": "mongojs",
          "description": "mongojs find",
          "phrases": {
            "active": "Performing find based on the specified criteria"
          },
          "ports": {
            "input": {
              "collection": {
                "type": "function",
                "title": "A mongojs.collection handle",
                "required": true,
                "readonly": true
              },
              "criteria": {
                "type": "object",
                "title": "A mongojs criteria JSON object",
                "required": true
              }
            },
            "output": {
              "error": {
                "title": "Error",
                "type": "object"
              },
              "documents": {
                "title": "Documents",
                "type": "object"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.collection, 'find', $.criteria]\n",
          "id": "57dfbc64-7d7c-434b-b6dc-4cf06751cc5a",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Find"
        },
        "update": {
          "_id": "5b1924b53bbb79000fdcfa8e",
          "name": "update",
          "ns": "mongojs",
          "description": "mongojs update",
          "phrases": {
            "active": "Updating document"
          },
          "ports": {
            "input": {
              "collection": {
                "type": "function",
                "title": "a mongojs.collection handle",
                "required": true,
                "readonly": true
              },
              "selector": {
                "type": "object",
                "title": "Selector",
                "required": true
              },
              "document": {
                "type": "object",
                "title": "JSON document",
                "required": true
              }
            },
            "output": {
              "error": {
                "type": "object"
              },
              "docs": {
                "type": "object"
              },
              "n": {
                "type": "object"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.collection, 'update', $.selector, $.document]\n",
          "id": "bf723ef3-9414-413e-97b5-8c73e361bc6e",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Update"
        },
        "insert": {
          "_id": "5b1924b53bbb79000fdcfa8f",
          "name": "insert",
          "ns": "mongojs",
          "description": "mongojs insert",
          "phrases": {
            "active": "Insering document into the collection"
          },
          "ports": {
            "input": {
              "collection": {
                "type": "function",
                "title": "a mongojs.collection handle",
                "required": true,
                "readonly": true
              },
              "document": {
                "type": "object",
                "title": "JSON document",
                "required": true
              }
            },
            "output": {
              "error": {
                "type": "object"
              },
              "docs": {
                "type": "object"
              },
              "n": {
                "type": "object"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.collection, 'insert', $.document]\n",
          "id": "455d58c1-4f1b-4e97-bafc-13d36d091707",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Insert"
        }
      },
      "console": {
        "log": {
          "_id": "5b118ccaad75a1000fccd867",
          "name": "log",
          "ns": "console",
          "description": "Console log",
          "async": true,
          "phrases": {
            "active": "Logging to console"
          },
          "ports": {
            "input": {
              "msg": {
                "type": "any",
                "title": "Log message",
                "description": "Logs a message to the console",
                "async": true,
                "required": true
              }
            },
            "output": {
              "out": {
                "type": "any",
                "title": "Log message"
              }
            }
          },
          "fn": "on.input.msg = function() {\n  console.log($.msg);\n  output( { out: $.get('msg') });\n}\n",
          "id": "21e4313a-f998-402f-b010-942fd968691c",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Log"
        }
      },
      "json": {
        "parse": {
          "_id": "5b192d813bbb79000fdcfa9e",
          "name": "parse",
          "ns": "json",
          "title": "ParseNodeSchema",
          "description": "Parses a string into a javascript object",
          "expose": [
            "JSON"
          ],
          "async": true,
          "phrases": {
            "active": "Parsing JSON string"
          },
          "ports": {
            "input": {
              "in": {
                "type": "string",
                "title": "JSON String",
                "required": true,
                "async": true
              },
              "reviver": {
                "type": "function",
                "title": "prescribes how the value originally produced by parsing is transformed, before being returned",
                "default": null,
                "async": true
              }
            },
            "output": {
              "out": {
                "type": "object",
                "title": "The Javascript Object"
              }
            }
          },
          "fn": "/* output.out = JSON.parse($.in, $.reviver); */\n\non.input.in = function () {\n  output({out: $.write('in', JSON.parse($.in, state.reviver))});\n};\n\non.input.reviver = function () {\n  state.reviver = $.reviver;\n};\n",
          "id": "103afa37-3426-4d38-9b19-0da40375c141",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "createSchema": {
          "_id": "5b192d813bbb79000fdcfa9a",
          "name": "createSchema",
          "ns": "json",
          "title": "NodeSchema",
          "description": "Instantiate a JSON Schema",
          "phrases": {
            "active": "Creating JSON Schema"
          },
          "ports": {
            "input": {
              "in": {
                "type": "object",
                "title": "JSON Schema",
                "format": "json",
                "required": true
              }
            },
            "output": {
              "error": {
                "type": "object",
                "title": "Error"
              },
              "out": {
                "type": "object",
                "title": "JSON Schema"
              }
            }
          },
          "dependencies": {
            "npm": {
              "json-gate": "0.x.x"
            }
          },
          "fn": "output.out = $.write('in', json_gate.createSchema($.in));\n",
          "id": "df6c91ee-0d5f-44dc-bed4-ab3209d37bc9",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "stringify": {
          "_id": "5b192d813bbb79000fdcfa9c",
          "name": "stringify",
          "ns": "json",
          "title": "ToString",
          "description": "Stringify a javascript object",
          "expose": [
            "JSON"
          ],
          "async": true,
          "phrases": {
            "active": "JSON Stringifying Object"
          },
          "ports": {
            "input": {
              "in": {
                "type": "any",
                "title": "Input Object",
                "async": true,
                "required": true
              },
              "replacer": {
                "type": "any",
                "title": "Replacer",
                "description": "A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string.",
                "default": null
              },
              "space": {
                "type": "number",
                "title": "Indentation length",
                "default": 0
              }
            },
            "output": {
              "out": {
                "type": "string",
                "title": "The JSON string"
              }
            }
          },
          "fn": "on.input.in = function() {\n  output({\n    out: $.write('in', JSON.stringify($.in, $.replacer, $.space))\n  });\n};\n",
          "id": "73fcbd4b-d002-41c8-b5c3-63849ed00471",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "validate": {
          "_id": "5b192d813bbb79000fdcfa9f",
          "name": "validate",
          "ns": "json",
          "async": true,
          "title": "Validate",
          "description": "Validates JSON agains JSON Schema",
          "phrases": {
            "active": "Validating JSON"
          },
          "ports": {
            "input": {
              "in": {
                "type": "object",
                "async": true,
                "title": "JSON",
                "format": "json",
                "required": true
              },
              "schema": {
                "type": "object",
                "title": "JSON Gate Schema"
              }
            },
            "output": {
              "error": {
                "type": "object",
                "title": "Error"
              },
              "out": {
                "type": "object",
                "title": "The Validated Object"
              }
            }
          },
          "fn": "on.input.in = function () {\n  try {\n    $.schema.validate($.in)\n    output({out: $.get('in')});\n  } catch(err) {\n    output({ error: $.create(err) });\n  }\n};\n",
          "id": "cce1e9e6-d10d-443a-a121-2f841160ee74",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        }
      },
      "express": {
        "app": {
          "_id": "5b118ccaad75a1000fccd22b",
          "name": "app",
          "ns": "express",
          "title": "Express",
          "description": "express app",
          "phrases": {
            "active": "Creating Express app"
          },
          "ports": {
            "input": {},
            "output": {
              "app": {
                "title": "App",
                "type": "function"
              },
              "express": {
                "title": "Express",
                "type": "function"
              }
            }
          },
          "dependencies": {
            "npm": {
              "express": "3.x.x"
            }
          },
          "env": "server",
          "fn": "output = {\n  app: $.create(express()),\n  express: $.create(express)\n};\n",
          "id": "27f41464-5507-4739-a64b-2fc02bf31fdb",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "listen": {
          "_id": "5b118ccaad75a1000fccd239",
          "name": "listen",
          "ns": "express",
          "title": "Listen",
          "description": "express listen",
          "phrases": {
            "active": "listening on port {{input.port}}, ?address?"
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "Express app",
                "readonly": true,
                "required": true
              },
              "port": {
                "type": "string",
                "title": "Port",
                "description": "The port this express app should listen on",
                "required": true
              }
            },
            "output": {
              "server": {
                "title": "Server",
                "type": "function"
              }
            }
          },
          "env": "server",
          "fn": "output = {\n  server: $.create($.app.listen($.port))\n}\n",
          "id": "7eec6696-de3b-4338-af67-5b16106daa50",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "bodyParser": {
          "_id": "5b118ccaad75a1000fccd22c",
          "name": "bodyParser",
          "ns": "express",
          "title": "BodyParser",
          "description": "Express Body Parser",
          "phrases": {
            "active": "Adding Express Body Parser Middleware"
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "App",
                "readonly": "true"
              },
              "express": {
                "type": "function",
                "title": "Express",
                "readonly": "true"
              }
            },
            "output": {
              "res": {
                "type": "ServerResponse"
              },
              "type": {
                "type": "any"
              }
            }
          },
          "dependencies": {
            "npm": {
              "body-parser": "1.x.x"
            }
          },
          "env": "server",
          "fn": "output = [$.app, 'use', body_parser.json()];\n",
          "id": "ea8416a9-e62a-4af7-bef2-1a42a1023d01",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "cors": {
          "_id": "5b118ccaad75a1000fccd231",
          "name": "cors",
          "ns": "express",
          "title": "CORS",
          "description": "",
          "phrases": {
            "active": "CORS is a node.js package for providing a Connect/Express middleware that can be used to enable CORS with various options"
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "App",
                "readonly": "true"
              },
              "express": {
                "type": "function",
                "title": "Express",
                "readonly": "true"
              },
              "origin": {
                "type": "string",
                "title": "Origin",
                "description": "Configures the Access-Control-Allow-Origin CORS header. Expects a string (ex: \"http://example.com\")",
                "default": null
              },
              "methods": {
                "type": "array",
                "title": "Methods",
                "description": "Configures the Access-Control-Allow-Methods CORS header. (ex: ['GET', 'PUT', 'POST'])",
                "default": null
              },
              "allowedHeaders": {
                "type": "array",
                "title": "Allowed Headers",
                "description": "Configures the Access-Control-Allow-Headers CORS header. (ex: ['Content-Type', 'Authorization]). If not specified, defaults to reflecting the headers specified in the request's Access-Control-Request-Headers header.",
                "default": null
              },
              "exposedHeaders": {
                "type": "array",
                "title": "Exposed Headers",
                "description": "Configures the Access-Control-Expose-Headers CORS header. (ex: ['Content-Range', 'X-Content-Range]). If not specified, no custom headers are exposed.",
                "default": null
              },
              "credentials": {
                "type": "boolean",
                "title": "Credentials",
                "description": "Configures the Access-Control-Allow-Credentials CORS header.",
                "default": false
              },
              "maxAge": {
                "type": "number",
                "title": "Max Age",
                "description": "Configures the Access-Control-Allow-Max-Age CORS header. Set to an integer to pass the header, otherwise it is omitted.",
                "default": null
              }
            },
            "output": {}
          },
          "dependencies": {
            "npm": {
              "cors": "2.x.x"
            }
          },
          "env": "server",
          "fn": "output = [$.app, 'use', cors({\n  origin: $.origin || true,\n  methods: $.methods || undefined,\n  allowedHeaders: $.allowedHeaders || undefined,\n  exposedHeaders: $.exposedHeaders || undefined,\n  credentials: $.credentials || undefined,\n  maxAge: $.maxAge || undefined\n})]\n",
          "id": "11db99d8-8bce-4b19-a34b-87552f8699d2",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "send": {
          "_id": "5b118ccaad75a1000fccd242",
          "name": "send",
          "ns": "express",
          "title": "Send",
          "async": true,
          "description": "express send string",
          "phrases": {
            "active": "Sending response body"
          },
          "ports": {
            "input": {
              "res": {
                "type": "Stream",
                "title": "Express response object",
                "required": true,
                "async": true,
                "readonly": true
              },
              "body": {
                "type": "string",
                "format": "html",
                "title": "The response body",
                "required": true
              }
            },
            "output": {}
          },
          "env": "server",
          "fn": "on.input.res = function() {\n  $.res.send($.body)\n}\n",
          "id": "3f5c7d2f-23c5-4627-b6f2-450b604cdb87",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "get": {
          "_id": "5b118ccaad75a1000fccd236",
          "name": "get",
          "ns": "express",
          "title": "Route",
          "description": "express get",
          "phrases": {
            "active": "Creating router path {{input.path}} for get requests."
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "Express app",
                "readonly": true,
                "required": true
              },
              "path": {
                "type": "string",
                "default": "/",
                "title": "A router path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true
              }
            },
            "output": {
              "req": {
                "title": "Request",
                "type": "Stream"
              },
              "res": {
                "title": "Response",
                "type": "Stream"
              },
              "next": {
                "title": "Next",
                "type": "function"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.app, 'get', $.path]\n",
          "id": "0b7dc9a2-4688-4da4-a055-4fa94ed196e5",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "put": {
          "_id": "5b118ccaad75a1000fccd240",
          "name": "put",
          "ns": "express",
          "title": "Route",
          "description": "express put",
          "phrases": {
            "active": "Creating router path {{input.path}} for put requests."
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "Express app",
                "readonly": true,
                "required": true
              },
              "path": {
                "type": "string",
                "default": "/",
                "title": "A router path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true
              }
            },
            "output": {
              "req": {
                "title": "Request",
                "type": "Stream"
              },
              "res": {
                "title": "Response",
                "type": "Stream"
              },
              "next": {
                "title": "Next",
                "type": "function"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.app, 'put', $.path]\n",
          "id": "89978b71-52c3-42ee-b26a-4e3dc22e3425",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "post": {
          "_id": "5b118ccaad75a1000fccd23f",
          "name": "post",
          "ns": "express",
          "title": "Route",
          "description": "express post",
          "phrases": {
            "active": "Adding router path {{input.path}} for POST requests."
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "Express app",
                "required": true,
                "readonly": true
              },
              "path": {
                "type": "string",
                "title": "Router path",
                "required": true
              }
            },
            "output": {
              "req": {
                "title": "Request",
                "type": "Stream"
              },
              "res": {
                "title": "Response",
                "type": "Stream"
              },
              "next": {
                "title": "Next",
                "type": "function"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.app, 'post', $.path]\n",
          "id": "881a0d79-b28c-4102-b731-7875e9e0a9cf",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        },
        "delete": {
          "_id": "5b118ccaad75a1000fccd233",
          "name": "delete",
          "ns": "express",
          "title": "Route",
          "description": "express delete",
          "phrases": {
            "active": "Creating router path {{input.path}} for delete requests."
          },
          "ports": {
            "input": {
              "app": {
                "type": "function",
                "title": "Express app",
                "readonly": true,
                "required": true
              },
              "path": {
                "type": "string",
                "default": "/",
                "title": "A router path",
                "description": "Regular expressions may also be used, and can be useful if you have very specific restraints",
                "required": true
              }
            },
            "output": {
              "req": {
                "title": "Request",
                "type": "Stream"
              },
              "res": {
                "title": "Response",
                "type": "Stream"
              },
              "next": {
                "title": "Next",
                "type": "function"
              }
            }
          },
          "env": "server",
          "fn": "output = [$.app, 'delete', $.path]\n",
          "id": "51126d22-b7d4-4b00-8d99-2c554b54a2b3",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        }
      },
      "object": {
        "pick": {
          "_id": "5b118ccaad75a1000fccd31c",
          "name": "pick",
          "ns": "object",
          "async": true,
          "description": "Output a copy of the object, filtered to only have values for the whitelisted keys (or array of valid keys)",
          "phrases": {
            "active": "Picking object"
          },
          "ports": {
            "input": {
              "in": {
                "title": "Object",
                "type": "object",
                "async": true
              },
              "pick": {
                "title": "Pick",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "output": {
              "out": {
                "title": "out",
                "type": "object"
              }
            }
          },
          "dependencies": {
            "npm": {
              "underscore": "1.x.x"
            }
          },
          "fn": "on.input.in = function() {\n  output({out: $.write('in', underscore.pick($.in, $.pick))});\n};\n",
          "id": "a019bea7-06e6-4e90-a1b7-0f8391b39d57",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "FilterId"
        },
        "oneOf": {
          "_id": "5b118ccaad75a1000fccd31a",
          "name": "oneOf",
          "ns": "object",
          "async": true,
          "description": "Selects a (nested) property outputing the first property available. data.in || data.that || .. etc. Sends an error of none of the properties matched.",
          "phrases": {
            "active": "Picking one of the properties"
          },
          "ports": {
            "input": {
              "in": {
                "title": "In",
                "type": "Object",
                "async": true
              },
              "path": {
                "title": "Path",
                "type": "array"
              }
            },
            "output": {
              "out": {
                "title": "Output",
                "type": "any"
              },
              "error": {
                "title": "Error",
                "type": "object"
              }
            }
          },
          "dependencies": {
            "npm": {
              "dot-object": "0.x.x"
            }
          },
          "fn": "on.input.in = function() {\n\n  var val;\n  for(var i = 0; i < $.path.length; i++) {\n    val = dot_object().pick($.path[i], $.in);\n    if(val !== undefined) {\n      return output({ out: $.write('in', val) });\n    }\n  }\n\n  output({ error: new Error('None of the properties are found') });\n\n};\n",
          "id": "0c6fbe59-a30f-4212-92d6-baa09bf9292f",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "OneOf"
        },
        "isEmpty": {
          "_id": "5b118ccaad75a1000fccd30b",
          "name": "isEmpty",
          "ns": "object",
          "async": true,
          "description": "Determines if object contains no values (no enumerable own-properties)",
          "phrases": {
            "active": "Determining empty object"
          },
          "ports": {
            "input": {
              "in": {
                "title": "Object",
                "async": true,
                "type": "any"
              },
              "path": {
                "title": "Path",
                "type": "string",
                "default": null
              }
            },
            "output": {
              "yes": {
                "title": "Yes",
                "type": "boolean"
              },
              "no": {
                "title": "No",
                "type": "any"
              }
            }
          },
          "dependencies": {
            "npm": {
              "underscore": "1.x.x",
              "dot-object": "0.x.x"
            }
          },
          "fn": "on.input.in = function() {\n  var val = $.path ? dot_object().pick($.path, $.in) : $.in;\n\n  if (underscore.isEmpty(val)) {\n    output({ yes: $.get('in') });\n  } else {\n    output({ no: $.get('in') });\n  }\n\n};\n",
          "id": "c7ec6d79-cd4e-412b-872f-b49eea7c0857",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Empty"
        },
        "create": {
          "_id": "5b118ccaad75a1000fccd2fd",
          "name": "create",
          "ns": "object",
          "async": true,
          "description": "Create an object, if input is a direct object it just returns a copy of the object",
          "phrases": {
            "active": "Creating object"
          },
          "ports": {
            "input": {
              "in": {
                "title": "Object",
                "type": "object",
                "async": true
              }
            },
            "output": {
              "out": {
                "title": "out",
                "type": "object"
              }
            }
          },
          "fn": "on.input.in = function() {\n  output({out: $.clone('in', $.in)});\n};\n",
          "id": "402c47d3-b693-4adb-8516-b5e396a7b599",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Document"
        },
        "merge": {
          "_id": "5b118ccaad75a1000fccd872",
          "name": "merge",
          "ns": "object",
          "description": "Merges two object together, note: overlapping keys will overwrite",
          "phrases": {
            "active": "Merging objects together"
          },
          "ports": {
            "input": {
              "in1": {
                "type": "object",
                "title": "First Object",
                "required": true
              },
              "in2": {
                "type": "object",
                "title": "Second Object",
                "required": true
              }
            },
            "output": {
              "out": {
                "type": "object",
                "title": "Merged Object"
              }
            }
          },
          "fn": "for(var key in $.in1) {\n  $.in2[key] = $.in1[key];\n}\n\noutput = {out: $.get('in2')}\n",
          "id": "8a5741f5-1e68-42d7-b440-f1f72fc37c6a",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "MergeTokens"
        }
      },
      "data": {
        "string": {
          "_id": "5b118ccaad75a1000fccd1de",
          "ports": {
            "input": {
              "in": {
                "title": "String",
                "type": "any",
                "async": true,
                "required": true
              }
            },
            "output": {
              "out": {
                "title": "out",
                "type": "string"
              }
            }
          },
          "phrases": {
            "active": "Creating string {{input.string}}"
          },
          "description": "String",
          "async": true,
          "title": "EmptyToString",
          "ns": "data",
          "name": "string",
          "fn": "on.input.in = function() {\n  output( { out: $.write('in', typeof $.in === null ? 'null' : $.in.toString()) });\n};\n",
          "id": "b3703996-c55d-47b5-967a-64e997e98d63",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}"
        }
      },
      "array": {
        "create": {
          "_id": "5b118ccaad75a1000fccd18a",
          "name": "create",
          "ns": "array",
          "description": "Creates an array.",
          "phrases": {
            "active": "Creating array"
          },
          "ports": {
            "input": {
              "in": {
                "title": "Array",
                "type": "array"
              }
            },
            "output": {
              "out": {
                "title": "out",
                "type": "array"
              }
            }
          },
          "fn": "output.out = $.write('in', $.in.slice())\n",
          "id": "34e1f654-feb8-4223-8259-ee48021cf2f8",
          "provider": "https://api.chix.io/v1/nodes/{ns}/{name}",
          "title": "Arr"
        }
      }
    }
  }
}